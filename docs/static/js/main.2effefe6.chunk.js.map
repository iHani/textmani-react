{"version":3,"sources":["utils/functions.js","Components/Header.js","Components/Manipulator/CountersStatusClearCopy.js","Components/Manipulator/Options.js","Components/Manipulator/Replacer.js","Components/Manipulator/Remover.js","Components/Manipulator/MatchCounter.js","Components/Manipulator/ChangeCases.js","Components/Manipulator/Manipulator.js","Components/TextGenerator/StatusMessage.js","Components/TextGenerator/Options.js","Components/TextGenerator/TypeAndTimes.js","Components/TextGenerator/TextGenerator.js","Components/LangDetector/StatusMessage.js","Components/LangDetector/LangDetector.js","Components/MyDocs.js","serviceWorker.js","index.js","App.js"],"names":["countWords","text","arguments","length","undefined","trim","ar","en","match","arRegex","test","enRegex","countChars","randomBetween","min","max","Math","floor","random","Capitalize","string","charAt","toUpperCase","slice","getState","storage","window","x","setItem","removeItem","e","DOMException","code","name","localStorageAvailable","state","localStorage","getItem","JSON","parse","localStorageIsAvailable","allTabs","activeTab","manipulatorTab","replaceThis","replacseWith","removeThis","matchString","caseSensetive","regexEnabled","statusMessage","langDetectorTab","generatorTab","selectedType","selectedTimes","startWithLoremIpsum","stringify","getDefaultState","Header","_ref","tabs","setActiveTab","react_default","a","createElement","className","map","tab","i","key","concat","onClick","_ref2","target","innerText","CountersStatusClearCopy","props","setManipulatorTab","textareaRef","role","aria-label","type","Object","objectSpread","current","focus","document","queryCommandSupported","select","execCommand","Options","caseSensetiveRef","useRef","regexEnabledRef","toggleCheckbox","_objectSpread2","id","defaultChecked","status","defineProperty","ref","htmlFor","Replacer","handleOnChange","handleReplaceSomething","_replaceSomething","args","_args$text3","_args$replaceThis","_args$replacseWith","_args$caseSensetive3","_args$regexEnabled3","console","log","error","toLowerCase","replacedText","split","join","found","flags","reg","RegExp","replaceSomething","value","onChange","aria-describedby","Remover","handleRemoveSomething","_removeSomething","_args$text2","_args$string","_args$caseSensetive2","_args$regexEnabled2","lines","trimmedLines","push","toString","regMatch","removeSomething","_countMatches","_args$text","_args$matchString","_args$caseSensetive","_args$regexEnabled","countMatches","ChangeCases","handleChangeCaseTo","updated","word","Manipulator","rows","placeholder","autoFocus","assign","MatchCounter_Replacer","StatusMessage","setGeneratorTab","_generatorTab$text","_e$target","substring","handleStartWithLoremIpsum","TypeAndTimes","handleClick","Number","num","TextGenerator","handleGenerateText","lipsumText","times","grandWords","grandWordsLength","genWords","n","capitalizeFirst","words","genSentences","sentence","sentences","paragraph","paragraphs","genParagraphs","generateLipsum","Options_Options","setLangDetectorTab","lngDetector","LanguageDetect","LangDetector","StatusMessage_StatusMessage","detected","detect","lenght","lang","handleDetectLang","data","title","timestamp","Date","now","handleDeleteDoc","MyDocs","doc","data-dismiss","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","_useState","useState","slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","useEffect","newState","Components_Header","Components_MyDocs","getComponent","getFullYear","href","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2effefe6.chunk.js","sourcesContent":["/**\r\n* Counts words in Arabis and English in the provided string.\r\n* @function\r\n* @param {string} text - The text we want to count its words.\r\n* @return {number} The total number of Arabic and English words in text.\r\n*/\r\nexport function countWords(text = '') {\r\n  if (text.trim()) {\r\n    let ar = 0, en = 0;\r\n    if (text.match(/\\S/g)) {\r\n      //Arabic words\r\n      let arRegex = /[\\u0600-\\u06FF]+/g;\r\n      if (arRegex.test(text)) { ar = text.match(arRegex).length }\r\n      //English words\r\n      let enRegex = /\\w+/g;\r\n      if (enRegex.test(text)) { en = text.match(enRegex).length }\r\n      return ar + en\r\n    } else { return 0 }\r\n  }  else { return 0 }\r\n}\r\n\r\n/**\r\n* Counts characters in the provided string.\r\n* @function\r\n* @param {string} text - The text we want to count its words.\r\n* @return {number} The total number of characters in text.\r\n*/\r\nexport function countChars(text) {\r\n  return text ? text.length : 0;\r\n}\r\n\r\n/**\r\n* Counts number of matches of a string in another string, with or without Case sensetivity/Regular expressions.\r\n* @function\r\n* @param {object} args - The options object.\r\n* @param {string} text - The text we want to perform matching against.\r\n* @param {string} matchString - The string we want to count occurence for in text.\r\n* @param {boolean} caseSensetive\r\n* @param {boolean} regexEnabled\r\n* @return {object} ({error, found}) - Error message or number of matches.\r\n*/\r\nexport function countMatches(args){\r\n  let {\r\n    text = '',\r\n    matchString = '',\r\n    caseSensetive = false,\r\n    regexEnabled = false\r\n  } = args;\r\n\r\n  if (text.trim()) {\r\n    if (regexEnabled) {\r\n      const flags = caseSensetive ? \"g\" : \"ig\";\r\n      let reg = null;\r\n      let found = 0;\r\n\r\n      try {\r\n        reg = new RegExp(matchString, flags);\r\n        if (text.match(reg, flags)) {\r\n          found = text.match(reg, flags).length;\r\n          return ({ found });\r\n        }\r\n        return ({ found });\r\n      } catch (e) {\r\n        return ({ error: \"Invalid RegExp expression.\" });\r\n      }\r\n    } else {\r\n      if (!caseSensetive) {\r\n        text = text.toLowerCase();\r\n        matchString = matchString.toLowerCase();\r\n      }\r\n      // count matches when regex is disabled by \"split\"ing it and count number of occurences\r\n      const found = text.split(matchString).length - 1;\r\n      return ({ found });\r\n    }\r\n  } else {\r\n    return ({ error: \"No text to count matches against.\" });\r\n  }\r\n}\r\n\r\n/**\r\n* Remove a string from anther string.\r\n* @function\r\n* @param {object} args - The options object.\r\n* @param {string} text - The text we want to perform matching against.\r\n* @param {string} string - The string we want to count occurence for in text.\r\n* @param {boolean} caseSensetive\r\n* @param {boolean} regexEnabled\r\n* @return {object} ({error, replacedText, found}) - Error message or the replaced text with total number of removes.\r\n*/\r\nexport function removeSomething(args){\r\n  let {\r\n    text = '',\r\n    string = '',\r\n    caseSensetive = false,\r\n    regexEnabled = false\r\n  } = args;\r\n\r\n  if (text.trim()) {\r\n\r\n    if (!string.trim()) {\r\n      return ({ error: \"What would you like to remove?\" });\r\n    }\r\n\r\n    if (string === \"madd\" || string === \"tashkeel\") {\r\n      const madd = /ـ/, tashkeel = /[ًٌٍَُِّ‘’ْ]/;\r\n      const type = string === \"madd\" ? madd : tashkeel;\r\n      const replacedText = text.split(type).join(\"\");\r\n      const found = text.split(type).length - 1;\r\n      return ({ replacedText, found });\r\n    }\r\n\r\n    if (string === \"trim lines\") {\r\n      const lines = text.split(/\\n/);\r\n      let trimmedLines = [];\r\n      for (var i = 0; i < lines.length; i++) {\r\n        trimmedLines.push(lines[i].trim());\r\n      }\r\n      const found = text.split(/\\n/).length - 1;\r\n      const replacedText = trimmedLines.toString().split(\",\").join(\"\\n\");\r\n      return ({ replacedText, found });\r\n    }\r\n\r\n    if (regexEnabled) {\r\n      const flags = caseSensetive ? \"g\" : \"ig\";\r\n      let reg = null;\r\n      let found = 0;\r\n\r\n      try {\r\n        reg = new RegExp(string, flags);\r\n        const regMatch = text.match(reg, flags);\r\n        if (regMatch) {\r\n          const replacedText = text.split(reg).join(\"\");\r\n          const found = regMatch.length;\r\n          return ({ replacedText, found });\r\n        }\r\n        return ({ found });\r\n      } catch (e) {\r\n        return ({ error: \"Invalid RegExp expression.\" });\r\n      }\r\n    } else {\r\n      if (!caseSensetive) {\r\n        text = text.toLowerCase();\r\n        string = string.toLowerCase();\r\n      }\r\n      // count matches when regex is disabled by \"split\"ing it and count number of occurences\r\n      const replacedText = text.split(string).join(\"\");\r\n      const found = text.split(string).length - 1;\r\n      return ({ replacedText, found });\r\n    }\r\n  } else {\r\n    return ({ error: \"No text provided\" });\r\n  }\r\n}\r\n\r\n\r\n/**\r\n* Replace string with another string.\r\n* @function\r\n* @param {object} args - The options object.\r\n* @param {string} text - The text we want to perform matching against.\r\n* @param {string} replaceThis - The string we want to count occurence for in text.\r\n* @param {string} replacseWith - The string we want to count occurence for in text.\r\n* @param {boolean} caseSensetive\r\n* @param {boolean} regexEnabled\r\n* @return {object} ({error, replacedText, found}) - Error message or number of matches, or replaced text with number of replaces\r\n*/\r\nexport function replaceSomething(args){\r\n  let {\r\n    text = '',\r\n    replaceThis = '',\r\n    replacseWith = '',\r\n    caseSensetive = false,\r\n    regexEnabled = false\r\n  } = args;\r\nconsole.log(text);\r\n  if (text.trim()) {\r\n    if (regexEnabled) {\r\n      const flags = caseSensetive ? \"g\" : \"ig\";\r\n      let reg = null;\r\n\r\n      try {\r\n        reg = new RegExp(replaceThis, flags);\r\n        if (text.match(reg, flags)) {\r\n          const replacedText = text.split(reg).join(replacseWith);\r\n          const found = text.split(replaceThis).length - 1;\r\n          return ({ replacedText, found });\r\n        }\r\n        return ({ found: 0 });\r\n      } catch (e) {\r\n        return ({ error: \"Invalid RegExp expression.\" });\r\n      }\r\n    } else {\r\n      if (!caseSensetive) {\r\n        text = text.toLowerCase();\r\n        replaceThis = replaceThis.toLowerCase();\r\n        replacseWith = replacseWith.toLowerCase();\r\n      }\r\n      const replacedText = text.split(replaceThis).join(replacseWith);\r\n      const found = text.split(replaceThis).length - 1;\r\n      return ({ replacedText, found });\r\n    }\r\n  } else {\r\n    return ({ error: \"No text to replace at.\" });\r\n  }\r\n}\r\n\r\n\r\n/**\r\n* Generate dummy text (lorem ipsum).\r\n* @function\r\n* @param {string} type - Either words, sentences, or paragraphs.\r\n* @param {number} times - The number of \"type\" we want to generate.\r\n* @return {string} The dummy text.\r\n*/\r\nexport function generateLipsum(type, times) {\r\n  const grandList = \"sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium totam rem aperiam eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt neque porro quisquam est qui dolorem ipsum quia dolor sit amet consectetur adipiscing velit sed quia non numquam do eius modi tempora incididunt ut labore et dolore magnam aliquam quaerat voluptatem ut enim ad minima veniam quis nostrum exercitationem ullam corporis suscipit laboriosam nisi ut aliquid ex ea commodi consequatur quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur vel illum qui dolorem eum fugiat quo voluptas nulla pariatur at vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint obcaecati cupiditate non-provident similique sunt in culpa qui officia deserunt mollitia animi id est laborum et dolorum fuga et harum quidem rerum facilis est et expedita distinctio nam libero tempore cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus omnis voluptas assumenda est omnis dolor repellendus temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non-recusandae itaque earum rerum hic tenetur a sapiente delectus ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat\";\r\n\r\n  const grandWords = grandList.split(\" \");\r\n  const grandWordsLength = grandWords.length;\r\n\r\n  // Generate random n words from grandList\r\n  function genWords(n, capitalizeFirst = true) {\r\n    let words = [], word;\r\n    for (let i = 0; i < n; i++) {\r\n      word = grandWords[randomBetween(0, grandWordsLength)];\r\n      words.push(word);\r\n    }\r\n    words[0] = capitalizeFirst ? Capitalize(words[0]) : words[0];\r\n    return words.join(\" \");\r\n  }\r\n\r\n  // Generate random n sentences from grandList\r\n  function genSentences(n) {\r\n    const min = randomBetween(3, 6); // range of words in small sentences\r\n    const max = randomBetween(6, 15); // range of words in long sentences\r\n    let sentences = [], sentence, capitalizeFirst;\r\n    for (let i = 0; i < n; i++) {\r\n      capitalizeFirst = (i === 0); // flag capitalization for the first sentence.\r\n      sentence = genWords(randomBetween(min, max), capitalizeFirst);\r\n      sentences.push(sentence);\r\n    }\r\n    return sentences.join(\", \") + \".\";\r\n  }\r\n\r\n  // Generate random n sentences from grandList\r\n  function genParagraphs(n) {\r\n    const min = randomBetween(5, 8); // range of words in small paragraph\r\n    const max = randomBetween(8, 15); // range of words in long paragraph\r\n    let paragraphs = [], paragraph;\r\n    for (let i = 0; i < n; i++) {\r\n      paragraph = genSentences(randomBetween(min, max));\r\n      paragraphs.push(paragraph);\r\n    }\r\n    return paragraphs.join(\"\\n\\n\");\r\n  }\r\n\r\n  switch (type) {\r\n    case \"Words\": return genWords(times);\r\n    case \"Sentences\": return genSentences(times);\r\n    case \"Paragraphs\": return genParagraphs(times);\r\n    default:\r\n    return\r\n  }\r\n}\r\n\r\n\r\n/**\r\n* Get a random number between two numbers.\r\n* @function\r\n* @param {number} min - Minimum number.\r\n* @param {number} max - Maximum number.\r\n* @return {number} Random number between min and max.\r\n*/\r\nexport function randomBetween(min, max) {\r\n  return Math.floor(Math.random() * (max-min+1) + min);\r\n}\r\n\r\n\r\n/**\r\n* Capitalize first letter of the string.\r\n* @function\r\n* @param {string} type - The text we want to capitalize.\r\n* @return {string} The Capitalized text.\r\n*/\r\nexport function Capitalize(string) {\r\n  return string && string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n\r\n/**\r\n* Check if localStorage is supported.\r\n* @function\r\n* @param {string} type - The text we want to capitalize.\r\n* @return {string} The Capitalized text.\r\n*/\r\nexport function localStorageAvailable() {\r\n    try {\r\n        var storage = window[\"localStorage\"],\r\n            x = '__storage_test__';\r\n        storage.setItem(x, x);\r\n        storage.removeItem(x);\r\n        return true;\r\n    }\r\n    catch(e) {\r\n        return e instanceof DOMException && (\r\n            // everything except Firefox\r\n            e.code === 22 ||\r\n            // Firefox\r\n            e.code === 1014 ||\r\n            // test name field too, because code might not be present\r\n            // everything except Firefox\r\n            e.name === 'QuotaExceededError' ||\r\n            // Firefox\r\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n            // acknowledge QuotaExceededError only if there's something already stored\r\n            storage.length !== 0;\r\n    }\r\n}\r\n\r\n\r\n// Get default state values\r\nexport function getDefaultState() {\r\n  const state = {\r\n    localStorageIsAvailable: true,\r\n    allTabs: [\"Manipulate text\", \"Language detector\", \"Lorem ipsum Generator\"],\r\n    activeTab: \"Manipulate text\",\r\n    manipulatorTab: {\r\n      text: \"\",\r\n      replaceThis: \"\",\r\n      replacseWith: \"\",\r\n      removeThis: \"\",\r\n      matchString: \"\",\r\n      caseSensetive: false,\r\n      regexEnabled: false,\r\n      statusMessage: \"Ready\"\r\n    },\r\n    langDetectorTab: {\r\n      text: \"\",\r\n      statusMessage: \"Ready\"\r\n    },\r\n    generatorTab: {\r\n      selectedType: \"Words\",\r\n      selectedTimes: 10,\r\n      startWithLoremIpsum: false,\r\n      statusMessage: \"Ready\"\r\n    },\r\n  }\r\n  localStorage.setItem(\"textmani_state\", JSON.stringify(state));\r\n  return state;\r\n}\r\n\r\nexport function getState() {\r\n  if (localStorageAvailable()) {\r\n    const state = localStorage.getItem(\"textmani_state\");\r\n    return state ? JSON.parse(state) : getDefaultState();\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nconst Header = ({ tabs, activeTab, setActiveTab }) => (\r\n  <div className=\"bg-light\">\r\n    <div className=\"container\">\r\n      <div className=\"py-2 text-center\">\r\n        <p className=\"h3\">Textmani</p>\r\n        <span>Online text manipulator, language detector, dummy text generator, and more.</span>\r\n      </div>\r\n      <ul className=\"nav nav-tabs\">\r\n        {tabs.map((tab, i) => (\r\n          <li key={i} className=\"nav-item\">\r\n            <span\r\n              className={`nav-link ${activeTab === tab ? \"active\": \"\"}`}\r\n              onClick={({ target }) => setActiveTab(target.innerText)}\r\n              >{tab}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { countWords, countChars } from '../../utils/functions';\r\n\r\nexport default function CountersStatusClearCopy(props) {\r\n  const {manipulatorTab, setManipulatorTab, textareaRef} = props;\r\n  const {text, statusMessage} = manipulatorTab;\r\n\r\n  function clearText() {\r\n    setManipulatorTab({ ...manipulatorTab, text: '', statusMessage: \"Cleared\"});\r\n    textareaRef.current.focus();\r\n  }\r\n\r\n  function copyToClipboard() {\r\n    if (text.trim()) {\r\n      if (document.queryCommandSupported('copy')) {\r\n        textareaRef.current.select();\r\n        document.execCommand('copy');\r\n        setManipulatorTab({ ...manipulatorTab, statusMessage: \"Copied\"});\r\n      } else {\r\n        setManipulatorTab({ ...manipulatorTab, statusMessage: \"Can not copy from your browser!\"});\r\n      }\r\n    } else {\r\n      setManipulatorTab({ ...manipulatorTab, statusMessage: \"No text to copy!\"});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mb-2\">\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n              <span className=\"counters\">\r\n                words: <strong>{countWords(text)}</strong>\r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <span className=\"counters\">\r\n                chars: <strong>{countChars(text)}</strong>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6 text-center dotted\">\r\n          {statusMessage}\r\n        </div>\r\n        <div className=\"col-3 text-right\">\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Clear | Copy\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary\"\r\n              onClick={clearText}\r\n              >Clear\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary\"\r\n              onClick={copyToClipboard}\r\n              >Copy\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from 'react';\r\n\r\nexport default function Options({manipulatorTab, setManipulatorTab}) {\r\n  const {caseSensetive, regexEnabled} = manipulatorTab;\r\n  const caseSensetiveRef = useRef();\r\n  const regexEnabledRef = useRef();\r\n\r\n  function toggleCheckbox({ target }) {\r\n    const {id, defaultChecked} = target;\r\n    const stat = defaultChecked ? \"Disabled\" : \"Enabled\";\r\n    const option = id === \"caseSensetive\" ? \"Case Sensetive \" : id === \"regexEnabled\" ? \"Regular Expression \" : \"\";\r\n    const status = option + stat;\r\n    setManipulatorTab({ ...manipulatorTab, [id]: !defaultChecked, statusMessage: status });\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container section\">\r\n      <div className=\"row\">\r\n        <div className=\"col-2 text-right\">\r\n          Options\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <small className=\"form-text\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"caseSensetive\"\r\n                    defaultChecked={caseSensetive}\r\n                    onClick={toggleCheckbox}\r\n                    ref={caseSensetiveRef}\r\n                    className=\"form-check-input\"\r\n                    />\r\n                  <label className=\"form-check-label\" htmlFor=\"caseSensetive\">\r\n                    Case sensetive\r\n                  </label>\r\n                </div>\r\n              </small>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <small className=\"form-text\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"regexEnabled\"\r\n                    defaultChecked={regexEnabled}\r\n                    onClick={toggleCheckbox}\r\n                    ref={regexEnabledRef}\r\n                    className=\"form-check-input\"\r\n                    />\r\n                  <label className=\"form-check-label\" htmlFor=\"regexEnabled\">\r\n                    Enable RegEx\r\n                  </label>\r\n                </div>\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { replaceSomething } from '../../utils/functions';\r\n\r\nexport default function Replacer({manipulatorTab, setManipulatorTab, handleOnChange}) {\r\n  let {text, replaceThis, replacseWith, caseSensetive, regexEnabled} = manipulatorTab;\r\n\r\n  function handleReplaceSomething(text, replaceThis, replacseWith) {\r\n    if (!text) {\r\n      setManipulatorTab({ ...manipulatorTab, statusMessage: \"No text to replace\" });\r\n    } else {\r\n      const replacingArgs = {\r\n        text,\r\n        replaceThis,\r\n        replacseWith,\r\n        caseSensetive,\r\n        regexEnabled\r\n      };\r\n      const {error, replacedText, found} = replaceSomething(replacingArgs);\r\n      if (error) {\r\n        setManipulatorTab({ ...manipulatorTab, statusMessage: error });\r\n      } else {\r\n        setManipulatorTab({ ...manipulatorTab, text: replacedText, statusMessage: `Replaced ${found} times` });\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container section\">\r\n      <div className=\"row\">\r\n        <div className=\"col-2 text-right\">\r\n          Replace\r\n        </div>\r\n        <div className=\"col-4 pb-1\">\r\n          <input\r\n            id=\"replaceThis\"\r\n            value={replaceThis}\r\n            onChange={handleOnChange}\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            aria-describedby=\"replace text\"\r\n            />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-2 text-right\">\r\n          with\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <input id=\"replacseWith\" value={replacseWith} type=\"text\" className=\"form-control\" aria-describedby=\"replace with\" onChange={handleOnChange}/>\r\n        </div>\r\n        <div className=\"col-1 text-right\">\r\n          <div className=\"text-left\" aria-label=\"Replace\">\r\n            <button\r\n              onClick={() => handleReplaceSomething(text, replaceThis, replacseWith)}\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              >Replace</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { removeSomething } from '../../utils/functions';\r\n\r\nexport default function Remover({manipulatorTab, setManipulatorTab, handleOnChange}) {\r\n  const {text, removeThis, caseSensetive, regexEnabled} = manipulatorTab;\r\n\r\n  function handleRemoveSomething(string) {\r\n    const removeArgs = {\r\n      text,\r\n      string,\r\n      caseSensetive,\r\n      regexEnabled\r\n    };\r\n    const { error, replacedText, found } = removeSomething(removeArgs);\r\n    if (error) {\r\n      setManipulatorTab({ ...manipulatorTab, statusMessage: error });\r\n    } else {\r\n      setManipulatorTab({ ...manipulatorTab, text: replacedText, statusMessage: `Removed ${found} times` });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container section\">\r\n      <div className=\"row\">\r\n        <div className=\"col-2 text-right\">\r\n          Remove\r\n        </div>\r\n        <div className=\"col-4 pb-1\">\r\n          <input\r\n            id=\"removeThis\"\r\n            value={removeThis}\r\n            onChange={handleOnChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            aria-describedby=\"remove text\"\r\n            />\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Remove something\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              onClick={() => handleRemoveSomething(removeThis)}\r\n              >remove\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              onClick={() => handleRemoveSomething(\"trim lines\")}\r\n              > trim lines\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              onClick={() => handleRemoveSomething(\"madd\")}\r\n              >حذف المــد\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              onClick={() => handleRemoveSomething(\"tashkeel\")}\r\n              >حذف التشكيل\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { countMatches } from '../../utils/functions';\r\n\r\nexport default function Replacer({manipulatorTab, setManipulatorTab, handleOnChange}) {\r\n  const {text, matchString, caseSensetive, regexEnabled} = manipulatorTab;\r\n\r\n  function handleMatchStringOnChange() {\r\n    const matchingArgs = {\r\n      text,\r\n      matchString,\r\n      caseSensetive,\r\n      regexEnabled\r\n    };\r\n    const { error, found } = countMatches(matchingArgs);\r\n    if (error) {\r\n      setManipulatorTab({ ...manipulatorTab, statusMessage: error });\r\n    } else {\r\n      setManipulatorTab({ ...manipulatorTab, statusMessage: `Found ${found} matches` });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container section\">\r\n      <div className=\"row\">\r\n        <div className=\"col-2 text-right\">\r\n          Count matches for\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <input\r\n            id=\"matchString\"\r\n            value={matchString}\r\n            onChange={handleOnChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            aria-describedby=\"count words\"\r\n            />\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Remove something\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              onClick={handleMatchStringOnChange}\r\n              >count\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Capitalize } from '../../utils/functions';\r\n\r\nexport default function ChangeCases(props) {\r\n\r\n  function handleChangeCaseTo(type) {\r\n    const {manipulatorTab, setManipulatorTab} = props;\r\n    const {text} = manipulatorTab;\r\n    let updated;\r\n    switch (type) {\r\n      case 'lower':\r\n      updated = text.toLowerCase();\r\n      setManipulatorTab({ ...manipulatorTab, text: updated });\r\n      break;\r\n      case 'upper':\r\n      updated = text.toUpperCase();\r\n      setManipulatorTab({ ...manipulatorTab, text: updated });\r\n      break;\r\n      case 'capitalizeEachWord':\r\n      updated = text.toLowerCase().split(\" \").map(word => Capitalize(word)).join(\" \");\r\n      setManipulatorTab({ ...manipulatorTab, text: updated });\r\n      break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container section\">\r\n      <div className=\"row\">\r\n        <div className=\"col-2 text-right\">\r\n          Change case\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Change case\">\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => handleChangeCaseTo('lower')}>lowercase</button>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => handleChangeCaseTo('upper')}>UPPERCASE</button>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => handleChangeCaseTo('capitalizeEachWord')}>Capitalize Every Word</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from 'react';\r\nimport CountersStatusClearCopy from './CountersStatusClearCopy';\r\nimport Options from './Options';\r\nimport Replacer from './Replacer';\r\nimport Remover from './Remover';\r\nimport MatchCounter from './MatchCounter';\r\nimport ChangeCases from './ChangeCases';\r\n// import Scrambler from './Scrambler';\r\n\r\nexport default function(props) {\r\n  const {manipulatorTab, setManipulatorTab} = props;\r\n  const {text} = manipulatorTab;\r\n  const textareaRef = useRef();\r\n\r\n  // handle onChange event handler for all input(s)\r\n  function handleOnChange({ target }) {\r\n    const { value, id } = target;\r\n    setManipulatorTab({ ...manipulatorTab, [id]: value, statusMessage: \"Ready\" });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          id=\"text\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          className=\"form-control\"\r\n          ref={textareaRef}\r\n          rows=\"4\"\r\n          placeholder=\"Type or paste text here to manipulate\"\r\n          autoFocus>\r\n        </textarea>\r\n      </div>\r\n      <CountersStatusClearCopy textareaRef={textareaRef} {...props} />\r\n      <Options {...props} />\r\n      <Replacer handleOnChange={handleOnChange} {...props} />\r\n      <hr />\r\n      <Remover handleOnChange={handleOnChange} {...props} />\r\n      <hr />\r\n      <MatchCounter handleOnChange={handleOnChange} {...props} />\r\n      <hr />\r\n      <ChangeCases {...props} />\r\n      {/*\r\n      <hr />\r\n      <Scrambler {...props} />\r\n      */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { countWords, countChars } from '../../utils/functions';\r\n\r\nexport default function StatusMessage(props) {\r\n  const {generatorTab, setGeneratorTab, textareaRef} = props;\r\n  const {text, statusMessage} = generatorTab;\r\n\r\n  function clearText() {\r\n    setGeneratorTab({ ...generatorTab, text: '', statusMessage: \"Cleared\"});\r\n    textareaRef.current.focus();\r\n  }\r\n\r\n  function copyToClipboard() {\r\n    if (text.trim()) {\r\n      if (document.queryCommandSupported(\"copy\")) {\r\n        textareaRef.current.select();\r\n        document.execCommand(\"copy\");\r\n        setGeneratorTab({ ...generatorTab, statusMessage: \"Copied\"});\r\n      } else {\r\n        setGeneratorTab({ ...generatorTab, statusMessage: \"Can not copy from your browser!\"});\r\n      }\r\n    } else {\r\n      setGeneratorTab({ ...generatorTab, statusMessage: \"No text to copy!\"});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mb-2\">\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n              <span className=\"counters\">\r\n                words: <strong>{countWords(text)}</strong>\r\n              </span>\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <span className=\"counters\">\r\n                chars: <strong>{countChars(text)}</strong>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6 text-center dotted\">\r\n          {statusMessage}\r\n        </div>\r\n        <div className=\"col-3 text-right\">\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Clear\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary\"\r\n              onClick={clearText}\r\n              >Clear\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary\"\r\n              onClick={copyToClipboard}\r\n              >Copy\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Options({generatorTab, setGeneratorTab}) {\r\n  let {text = \"\", startWithLoremIpsum} = generatorTab;\r\n\r\n  function handleStartWithLoremIpsum(e, text) {\r\n    const {id, defaultChecked} = e.target;\r\n    if (defaultChecked) {\r\n      if (text.substring(0,12).toLowerCase() === \"lorem ipsum \") {\r\n        text = text.slice(12);\r\n      }\r\n    } else {\r\n      if (text.substring(0,12).toLowerCase() !== \"lorem ipsum \") {\r\n        text = \"Lorem ipsum \" + text;\r\n      }\r\n    }\r\n    setGeneratorTab({\r\n      ...generatorTab,\r\n      [id]: !defaultChecked,\r\n      text,\r\n      statusMessage: \"Ready\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container section\">\r\n      <div className=\"row\">\r\n        <div className=\"col-3 text-right\">\r\n          Options\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <small className=\"form-text\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"startWithLoremIpsum\"\r\n                    defaultChecked={startWithLoremIpsum}\r\n                    onClick={(e) => handleStartWithLoremIpsum(e, text)}\r\n                    // ref={startWithLoremIpsumRef}\r\n                    className=\"form-check-input\"\r\n                    />\r\n                  <label className=\"form-check-label\" htmlFor=\"startWithLoremIpsum\">\r\n                    Start with \"Lorem ipsum \"\r\n                  </label>\r\n                </div>\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function TypeAndTimes({generatorTab, setGeneratorTab}) {\r\n  const {selectedType, selectedTimes} = generatorTab;\r\n  const availableTypes = [\"Words\", \"Sentences\", \"Paragraphs\"];\r\n  const availableTimes = [1, 3, 5, 10, 20, 50, 100, 250, 500];\r\n\r\n  function handleClick(e) {\r\n    let { value, id } = e.target;\r\n    value = id === \"selectedTimes\" ? Number(value) : value;\r\n    setGeneratorTab({ ...generatorTab, [id]: value, statusMessage: \"Ready\" });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container section\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3 text-right\">\r\n            Type of text\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Select type of text to generate\">\r\n              {availableTypes.map(type => (\r\n                <button\r\n                  id=\"selectedType\"\r\n                  key={type}\r\n                  value={type}\r\n                  type=\"button\"\r\n                  className={`btn btn-outline-success ${type === selectedType ? \"active\" : \"\"}`}\r\n                  onClick={handleClick}\r\n                  > {type}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className=\"container section\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3 text-right\">\r\n            How many times\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Select how many times\">\r\n              {availableTimes.map(num => (\r\n                <button\r\n                  id=\"selectedTimes\"\r\n                  key={num}\r\n                  value={num}\r\n                  type=\"button\"\r\n                  className={`btn btn-outline-success ${num === Number(selectedTimes) ? \"active\" : \"\"}`}\r\n                  onClick={handleClick}\r\n                  > {num}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from 'react';\r\nimport { generateLipsum } from '../../utils/functions';\r\nimport StatusMessage from './StatusMessage';\r\nimport Options from './Options';\r\nimport TypeAndTimes from './TypeAndTimes';\r\n\r\nexport default function(props) {\r\n  const {generatorTab, setGeneratorTab} = props;\r\n  const {text, selectedType, selectedTimes, startWithLoremIpsum} = generatorTab;\r\n  const textareaRef = useRef();\r\n\r\n  // handle onChange event handler for all input(s)\r\n  function handleOnChange({ target }) {\r\n    const { value, id } = target;\r\n    setGeneratorTab({ ...generatorTab, [id]: value, statusMessage: \"Ready\" });\r\n  }\r\n\r\n  function handleGenerateText(selectedType, selectedTimes) {\r\n    let lipsumText = generateLipsum(selectedType, selectedTimes);\r\n\r\n    if (startWithLoremIpsum) {\r\n      if (lipsumText.substring(0,12).toLowerCase() !== \"lorem ipsum \") {\r\n        lipsumText = \"Lorem ipsum \" + lipsumText;\r\n      }\r\n    } else {\r\n      if (lipsumText.substring(0,12).toLowerCase() === \"lorem ipsum \") {\r\n        lipsumText = lipsumText.slice(12);\r\n      }\r\n    }\r\n    setGeneratorTab({ ...generatorTab, text: lipsumText, statusMessage: `${selectedTimes} ${selectedType} generated` });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          id=\"text\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          className=\"form-control\"\r\n          ref={textareaRef}\r\n          rows=\"4\"\r\n          placeholder=\"Lorem ipsum text will be generated here\"\r\n          ></textarea>\r\n      </div>\r\n\r\n      <StatusMessage textareaRef={textareaRef} {...props} />\r\n\r\n      <Options generatorTab={generatorTab} setGeneratorTab={setGeneratorTab}/>\r\n\r\n      <TypeAndTimes generatorTab={generatorTab} setGeneratorTab={setGeneratorTab} handleOnChange={handleOnChange} />\r\n\r\n      <div className=\"text-center mt-4\">\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Change case\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            onClick={() => handleGenerateText(selectedType, selectedTimes)}\r\n            autoFocus\r\n            > Generate text\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function StatusMessage(props) {\r\n  const {langDetectorTab, setLangDetectorTab, textareaRef} = props;\r\n  const {statusMessage} = langDetectorTab;\r\n\r\n  function clearText() {\r\n    setLangDetectorTab({ ...langDetectorTab, text: '', statusMessage: \"Cleared\"});\r\n    textareaRef.current.focus();\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mb-2\">\r\n      <div className=\"row\">\r\n        <div className=\"col-2\">\r\n        </div>\r\n        <div className=\"col-8 text-center dotted\">\r\n          {statusMessage}\r\n        </div>\r\n        <div className=\"col-2 text-right\">\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Clear\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-secondary\"\r\n              onClick={clearText}\r\n              >Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from 'react';\r\nimport { Capitalize } from '../../utils/functions';\r\nimport LanguageDetect from 'languagedetect';\r\nimport StatusMessage from './StatusMessage';\r\n\r\nconst lngDetector = new LanguageDetect();\r\n\r\nexport default function(props) {\r\n  const {langDetectorTab, setLangDetectorTab} = props;\r\n  const {text} = langDetectorTab;\r\n  const textareaRef = useRef();\r\n\r\n  // handle onChange event handler for all input(s)\r\n  function handleOnChange({ target }) {\r\n    const { value, id } = target;\r\n    setLangDetectorTab({ ...langDetectorTab, [id]: value, statusMessage: \"Ready\" });\r\n  }\r\n\r\n  function handleDetectLang() {\r\n    if (text.trim()) {\r\n      // get top 4 confidence results from lngDetector\r\n      const detected = lngDetector.detect(text, 4);\r\n      const status = detected.lenght ? `Language undetectable`\r\n      : `Top guesses: ${detected.map(lang => Capitalize(lang[0])).join(\", \")}`; //wtf is wrong with this ternary!\r\n      setLangDetectorTab({ ...langDetectorTab, statusMessage: status });\r\n    } else {\r\n      setLangDetectorTab({ ...langDetectorTab, statusMessage: \"No text to detect language\" });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          id=\"text\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          className=\"form-control\"\r\n          ref={textareaRef}\r\n          rows=\"4\"\r\n          placeholder=\"Type or paste text here to detect the language\"\r\n          autoFocus>\r\n        </textarea>\r\n      </div>\r\n\r\n      <StatusMessage textareaRef={textareaRef} {...props} />\r\n\r\n      <div className=\"text-center mt-4\">\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Change case\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => handleDetectLang()}\r\n            >Detect Language\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst data = [\r\n  {title: \"Clear poems\", timestamp: Date.now() },\r\n  {title: \"Mat note\", timestamp: Date.now() },\r\n  {title: \"lorem data\", timestamp: Date.now() },\r\n]\r\n\r\n\r\nfunction handleDeleteDoc(e) {\r\n  console.log(e.target);\r\n}\r\n\r\nconst MyDocs = () => (\r\n  <div>\r\n    <h2>My Docs</h2>\r\n    {data.map(doc => {\r\n      return (\r\n        <div key={doc.title} className=\"alert alert-secondary alert-dismissible fade show doc\" role=\"alert\">\r\n          <strong>{doc.title}</strong> <span className=\"small\">{doc.timestamp}</span>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            onClick={handleDeleteDoc}>\r\n            <span><i className=\"fa fa-xs fa-trash\"></i></span>\r\n          </button>\r\n        </div>\r\n      )\r\n    })}\r\n\r\n\r\n  </div>\r\n);\r\n\r\nexport default MyDocs;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './scss/custom.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getState } from './utils/functions';\r\nimport Header from './Components/Header';\r\nimport Manipulator from './Components/Manipulator/Manipulator';\r\nimport TextGenerator from './Components/TextGenerator/TextGenerator';\r\nimport LangDetector from './Components/LangDetector/LangDetector';\r\nimport MyDocs from './Components/MyDocs';\r\n\r\nexport default function App() {\r\n  const state = getState(); // get from localStorage, or return initial default state\r\n  const {localStorageIsAvailable, allTabs} = state;\r\n  const [tabs] = useState(allTabs);\r\n  const [activeTab, setActiveTab] = useState(state.activeTab);\r\n  const [manipulatorTab, setManipulatorTab] = useState(state.manipulatorTab);\r\n  const [langDetectorTab, setLangDetectorTab] = useState(state.langDetectorTab);\r\n  const [generatorTab, setGeneratorTab] = useState(state.generatorTab);\r\n\r\n  useEffect(() => {\r\n    if (localStorageIsAvailable) {\r\n      const newState = {\r\n        localStorageIsAvailable,\r\n        allTabs,\r\n        activeTab,\r\n        manipulatorTab,\r\n        langDetectorTab,\r\n        generatorTab\r\n      }\r\n      localStorage.setItem(\"textmani_state\", JSON.stringify(newState))\r\n    }\r\n  })\r\n\r\n  function getComponent(tab) {\r\n    switch (tab) {\r\n      case \"Manipulate text\": return (\r\n        <Manipulator\r\n          manipulatorTab={manipulatorTab}\r\n          setManipulatorTab={setManipulatorTab}\r\n          />\r\n      )\r\n      case \"Lorem ipsum Generator\": return (\r\n        <TextGenerator\r\n          generatorTab={generatorTab}\r\n          setGeneratorTab={setGeneratorTab}\r\n          />\r\n      )\r\n      case \"My Docs\": return <MyDocs />\r\n      case \"Language detector\": return (\r\n        <LangDetector\r\n          langDetectorTab={langDetectorTab}\r\n          setLangDetectorTab={setLangDetectorTab}\r\n          />\r\n      )\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header tabs={tabs} activeTab={activeTab} setActiveTab={setActiveTab}/>\r\n      <div className=\"container\">\r\n        <div className=\"pt-2 pb-3\">\r\n          {getComponent(activeTab)}\r\n        </div>\r\n        <hr />\r\n      </div>\r\n      <div className=\"text-center my-5\">\r\n        <span className=\"small\">\r\n          Textmani 2016 - {new Date().getFullYear()}\r\n        </span>\r\n        <a href=\"https://github.com/ihani/textmani-react\">\r\n          <span> <i className=\"fab fa-github\"></i></span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}